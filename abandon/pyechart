def get_draw_line(unique_license, unique_names, **kwargs):
    """
    生成图表数据和磁盘百分比列表。
    :return: tuple: 包含图表数据列表和反转后的磁盘百分比列表的元组。
    """
    data_lines = []
    disk_percent_list = []
    # 遍历唯一的许可证名称和服务器名称
    for unique_license_name in unique_license:
        for unique_name in unique_names:
            # 查询服务器信息
            if kwargs:
                start_time = kwargs.get('start_time')
                end_time = kwargs.get('end_time')
                select_value = kwargs.get('select_time')
                if select_value == 'last_hour':
                    server_info_list = cache.get('data_key')
                    print("server_info_list", server_info_list)
                else:
                    server_info_list = SeverInfo.objects.filter(license_name=unique_license_name,
                                                                name=unique_name,
                                                                time__range=(start_time, end_time)).order_by('time')
            else:
                server_info_list = SeverInfo.objects.filter(license_name=unique_license_name,
                                                            name=unique_name).order_by('time')
            if server_info_list.exists():
                # 提取时间、CPU使用率和内存百分比
                x_time = [info.localized_time.strftime('%Y-%m-%d %H:%M:%S') for info in server_info_list]
                y_cpu = [info.percent for info in server_info_list]
                y_memory = [info.memory_percent for info in server_info_list]
                # 创建图表对象
                chart = Chart()
                # 生成图表数据
                data_line = chart.lines_chart(f'{unique_license_name}_{unique_name}',
                                              f'CPU_Usage_{unique_license_name}_{unique_name}',
                                              x_time, y_cpu, y_memory)

                # 获取最后一个服务器信息的磁盘百分比
                disk_percent = server_info_list.values('disk_percent').last()
                # 获取磁盘百分比
                value_disk = disk_percent.get("disk_percent") if disk_percent else None

                # 添加图标数据和磁盘百分比到相应列表
                data_lines.append(data_line)
                disk_percent_list.append(value_disk)

    # 反转磁盘百分比列表
    reversed_list = disk_percent_list[::-1]
    return data_lines, reversed_list
